# This is a basic workflow to help you get started with Actions

name: Build_Image

env:
  VERSION: ${{ github.ref_name }}
  OS_URL: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img
  BASE_OS_IMAGE: base-os.img
  S3_ENDPOINT: ${{ vars.S3_ENDPOINT }}
  ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  S3_ALIAS: ${{ secrets.S3_ALIAS }}
  S3_BUCKET: ${{ vars.S3_BUCKET }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
    - '*'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Install prerequies
        run: |
          sudo dnf -y update
          sudo dnf install -y libguestfs-tools libguestfs-tools-c wget
      # Runs a set of commands using the runners shell
      - name: Download base image from Ubuntu Servers
        run: |
         sudo wget "$OS_URL" -O $BASE_OS_IMAGE
      - name: Making some changes on base image
        run: |
         sudo qemu-img resize $BASE_OS_IMAGE +8G
         sudo cp $BASE_OS_IMAGE $BASE_OS_IMAGE.bak
         sudo virt-resize -expand /dev/sda1 $BASE_OS_IMAGE.bak $BASE_OS_IMAGE
         sudo virt-customize -a $BASE_OS_IMAGE --run-command 'grub-install /dev/sda'
         sudo virt-customize -a $BASE_OS_IMAGE --run-command 'apt update && apt full-upgrade -y && apt install curl dnsutils htop iperf jq less lsof man-db ncdu net-tools nmap rsync telnet wget whois iotop mdadm figlet lsb-release python3-utmp bc -y'
         sudo virt-customize -a $BASE_OS_IMAGE --run-command 'apt purge snapd motd-news-config -y && apt autopurge -y'
         sudo virt-copy-in -a $BASE_OS_IMAGE config/cloud.cfg /etc/cloud/
         sudo virt-copy-in -a $BASE_OS_IMAGE config/sshd-banner /etc/ssh/
         sudo virt-copy-in -a $BASE_OS_IMAGE config/issue /etc/
         sudo virt-copy-in -a $BASE_OS_IMAGE bin/dynamic-motd/update-motd.d /etc/
         sudo virt-copy-in -a $BASE_OS_IMAGE config/10-openstack-cloud-rescue /etc/update-motd.d/
         sudo virt-copy-in -a $BASE_OS_IMAGE config/cc_set_passwords.py /usr/lib/python3/dist-packages/cloudinit/config/
         sudo virt-customize -a $BASE_OS_IMAGE --run-command 'chmod -x /etc/update-motd.d/* && chmod +x /etc/update-motd.d/00-figlet /etc/update-motd.d/10-openstack-cloud-rescue && touch /etc/update-motd.d/hushlogin'
         sudo virt-customize -a $BASE_OS_IMAGE --run-command 'echo "Banner /etc/ssh/sshd-banner" >> /etc/ssh/sshd_config'
      - name: Sysprep & Sparsify image
        run: |
         sudo virt-sysprep -a $BASE_OS_IMAGE
         sudo virt-sparsify --convert qcow2 --compress $BASE_OS_IMAGE cloud-rescue-${{ env.VERSION }}-x86_64.qcow2
         sudo md5sum cloud-rescue-${{ env.VERSION }}-x86_64.qcow2 > md5.txt
      
      - name: Uploading image in object storage
        run: |
         echo "Uploading image in object storage"
         mc alias set ${{ env.S3_ALIAS }} ${{ env.S3_ENDPOINT }} ${{ env.ACCESS_KEY }} ${{ env.SECRET_KEY }}
         mc cp cloud-rescue-${{ env.VERSION }}-x86_64.qcow2 ${{ env.S3_ALIAS }}/${{ env.S3_BUCKET }}/latest/cloud-rescue-${{ env.VERSION }}-x86_64.qcow2
         mc cp md5.txt ${{ env.S3_ALIAS }}/${{ env.S3_BUCKET }}/latest/md5.txt
         mc cp ${{ env.S3_ALIAS }}/${{ env.S3_BUCKET }}/latest/cloud-rescue-${{ env.VERSION }}-x86_64.qcow2 ${{ env.S3_ALIAS }}/${{ env.S3_BUCKET }}/${{ env.VERSION }}/cloud-rescue-${{ env.VERSION }}-x86_64.qcow2
         mc cp ${{ env.S3_ALIAS }}/${{ env.S3_BUCKET }}/latest/md5.txt ${{ env.S3_ALIAS }}/${{ env.S3_BUCKET }}/${{ env.VERSION }}/md5.txt
